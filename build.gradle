/*
 *     Copyright (C) 2020 boomboompower
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }

        // Sponge Repository
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"

        // For Mixins
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

version = '3.0.0'
group = "me.do_you_like.skinchanger"
archivesBaseName = "SkinChangerMod"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_22"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenCentral()

    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }

    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    
    provided('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    compile 'org.projectlombok:lombok:1.16.20'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

jar {
    archiveName = "$baseName.$extension"

    from configurations.provided.asFileTree.files.collect {
        // Fixes an issue where Mixin's copies a duplicate file into the build jar...
        exclude 'META-INF/services/javax.annotation.processing.Processor'

        zipTree(it)
    }

    manifest.attributes(
            'Main-Class' : 'me.do_you_like.mods.skinchanger.installer.InstallerCore',
            'MixinConfigs' : 'mixins.skinchanger.json',
            'TweakOrder' : '0',
            'TweakClass' : 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePluginContainsFMLMod' : true,
            'ForceLoadAsMod' : true
    )
}

sourceJar {
    // Rename the jar so it doesn't contain "SNAPSHOT"
    archiveName = "$baseName-sources.$extension"
}

sourceSets {
    main {
        //noinspection GroovyAssignabilityCheck
        refMap = "mixins.skinchanger.refmap.json"
    }
}

configurations {
    provided
    compile.extendsFrom(provided)
}

mixin {
    defaultObfuscationEnv searge
}
