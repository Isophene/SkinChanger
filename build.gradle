/*
 *     Copyright (C) 2020 boomboompower
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'net.sf.proguard:proguard-gradle:6.0.3'
        classpath 'net.sf.proguard:proguard-base:6.0.3'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = '3.0.0'
group = "wtf.boomy.skinchanger"
archivesBaseName = "SkinChangerMod"

// We use Java 8
sourceCompatibility = targetCompatibility = 1.8

minecraft {
    // Default run directory will be located in 'PROJECT_DIR/run'
    runDir = "run"

    // Version retrieved off https://files.minecraftforge.net/
    version = "1.8.9-11.15.1.1722"

    // The mapping to use http://export.mcpbot.bspk.rs/stable/
    mappings = "stable_22"

    replace '@VERSION@', this.version
    replace '@MC_VERSION@', "1.8.9"
    replace '@FINGERPRINT@', System.getenv('SHA1Signature') ?: ""
}

repositories {
    mavenCentral()

    maven {
        url "https://jitpack.io"
    }
}

// General mod dependencies
dependencies {
    // Updater functionality
    provided 'com.github.boomboompower:ApagogeJava:master-SNAPSHOT'

    // UI functionality
    implementation 'com.github.boomboompower:ModernUI:ebc86f3af1'
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

// Makes the output jar name contain no versioning scheme so the build script
// can find the jar easily without hardcoding a version inside of the buildscript.
//
// Fixes an issue with Mixin where it tries to add a class to the jar which
// is already inside of the jar (I honestly have no idea why this occurs).
//
// Also places all valid META-INF/MANIFEST.MF information inside of the mod such as
// The mixin tweaker location & the installer main class.
jar {
    archiveName = "$baseName.$extension"

    from configurations.provided.asFileTree.files.collect {
        // Fixes an issue where Mixin's copies a duplicate file into the build jar...
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'com/google/*/**'

        zipTree(it)
    }

    manifest.attributes(
            'Main-Class' : 'wtf.boomy.mods.skinchanger.installer.InstallerCore',
            'FMLCorePlugin': 'wtf.boomy.mods.skinchanger.core.FMLLoadingPlugin',
            'FMLCorePluginContainsFMLMod' : true,
            'ForceLoadAsMod' : true
    )
}

// A simple patch to the sourceJar so it does not contain the
// version information. The installer will place the versioned file
// in the mods directory but we must exclude the version so the build
// script on github works properly.
sourceJar {
    // Rename the jar so it doesn't contain "SNAPSHOT"
    archiveName = "$baseName-sources.$extension"
}

sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        // Hidden dev environment variables and credentials
        java {
            exclude '**/priv'
        }
    }
}

// Makes the "compile" configuration extend from the provided
// configuration (this makes it inherit similar build properties)
configurations {
    provided

    compile.extendsFrom(provided)
}

// For obfuscating the jar file.
task proguard(type: ProGuardTask) {
    configuration 'proguard/proguard.txt'

    injars "build/libs/${jar.archiveName}"
    outjars "build/libs/PRO-${jar.archiveName}"
}
